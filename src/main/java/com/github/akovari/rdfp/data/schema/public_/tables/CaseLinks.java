/**
 * This class is generated by jOOQ
 */
package com.github.akovari.rdfp.data.schema.public_.tables;


import com.github.akovari.rdfp.data.schema.public_.Keys;
import com.github.akovari.rdfp.data.schema.public_.Public;
import com.github.akovari.rdfp.data.schema.public_.tables.records.CaseLinksRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CaseLinks extends TableImpl<CaseLinksRecord> {

	private static final long serialVersionUID = 48889009;

	/**
	 * The reference instance of <code>public.case_links</code>
	 */
	public static final CaseLinks CASE_LINKS = new CaseLinks();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CaseLinksRecord> getRecordType() {
		return CaseLinksRecord.class;
	}

	/**
	 * The column <code>public.case_links.id</code>.
	 */
	public final TableField<CaseLinksRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.case_links.url</code>.
	 */
	public final TableField<CaseLinksRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>public.case_links.case_id</code>.
	 */
	public final TableField<CaseLinksRecord, String> CASE_ID = createField("case_id", org.jooq.impl.SQLDataType.CHAR.length(8).nullable(false), this, "");

	/**
	 * Create a <code>public.case_links</code> table reference
	 */
	public CaseLinks() {
		this("case_links", null);
	}

	/**
	 * Create an aliased <code>public.case_links</code> table reference
	 */
	public CaseLinks(String alias) {
		this(alias, CASE_LINKS);
	}

	private CaseLinks(String alias, Table<CaseLinksRecord> aliased) {
		this(alias, aliased, null);
	}

	private CaseLinks(String alias, Table<CaseLinksRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<CaseLinksRecord, Integer> getIdentity() {
		return Keys.IDENTITY_CASE_LINKS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CaseLinksRecord> getPrimaryKey() {
		return Keys.CASE_LINKS_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CaseLinksRecord>> getKeys() {
		return Arrays.<UniqueKey<CaseLinksRecord>>asList(Keys.CASE_LINKS_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CaseLinks as(String alias) {
		return new CaseLinks(alias, this);
	}

	/**
	 * Rename this table
	 */
	public CaseLinks rename(String name) {
		return new CaseLinks(name, null);
	}
}
